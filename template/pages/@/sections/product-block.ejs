<% 
const apx_seals = _.cms('apx_seals') || {}
const apx_props = _.cms('apx_props') || {}

%>
<div id="product-block" class="product-block mt-md-1 mb-4 mb-lg-5">
  <div class="container-fluid">
    <section
      id="product"
      class="product"
      data-to-render="true"
      data-product-id="<%= _.state._id %>"
      data-sku="<%= _.state.sku %>"
    >
      <div id="product-dock">
        <!--
          `TheProduct` should be rendered (hydrated) here:
          https://developers.e-com.plus/storefront/@ecomplus/storefront-components/docs/TheProduct.html
        -->
      </div>
      <div class="row d-block d-md-none py-3 px-2" >
        <div class="col" id="bz_product_mobile">
          <div class="block-rating">
            <h1 class="product__name">
              <%= _.ecomUtils.name(_.state) %>
            </h1>
            <div data-slot="rating">
              <div class="skeepers_product__stars" data-product-id="<%= _.state._id %>"></div>
            </div>
          </div>
          <div class="__prices"></div>
          <ul id="apx_seals">
            <% apx_seals.seals.forEach(({ item })=> {
                
                let flag = false
                let categories = item.categories 
                let products = item.products 

                if(categories && _.state.categories){
                  categories.forEach(({ category }) => {
                    if(_.state.categories.find(el => el.slug == category.title.trim().toLowerCase() )){
                      flag = true
                      
                    }
                  })
                }

                if(products){
                  products.forEach(({ product }) => {
                    if(_.state.sku.trim().toLowerCase() == product.title.trim().toLowerCase()){
                      flag = true
                    }
                  })
                }

                if(flag){
                  let css = ""
                  css = css + "color:" + item.text_color + ';'
                  css = css + "background-color:" + item.bg_color + ';'
                  css = css + "border: 1px solid " + item.border_color + ';'
              %>
                  <li style="<%= css %>">
                  <% if (item.image) {%>
                    <img src="<%=  item.image %>" alt="<%=  item.title %>"/>
                  <% } %>
                  <%- item.title %>      
                  </li>
              <% 
                }
            }) 
          %>
          </ul>
          
        </div>
      </div>
      <div class="row">
        <div class="col-12 col-md mb-4 pl-md-1">
          <!-- Picture(s) gallery will be inserted dynamically within `TheProduct` -->
          <% if (_.state.pictures) { %>
            <% const imgObj = _.ecomUtils.img(_.state, null, 'big') %>
            <% if (imgObj) { %>
              <% const [width, height] = (imgObj.size || '').split('x').map(px => parseInt(px, 10)) %>
              <div id="product-gallery">
                
              </div>
            <% } %>
          <% } %>
          <!-- Custom additional code on bottom of images gallery -->
          <% if (_.state.short_description) { %>
            <p class="product__info mt-3 lead short-description">
              <%= _.state.short_description %>
            </p>
          <% } %>
        </div>

        <div class="col col-md-4  px-md-5 product--side">
          <div class="bz_product-info-sticky pt-md-5">
            <%- await include('@/sections/breadcrumbs') %>
            <div class="block-rating">
              <h1 class="product__name">
                <%= _.ecomUtils.name(_.state) %>
              </h1>
              <div data-slot="rating">
                <div class="skeepers_product__stars" data-product-id="<%= _.state._id %>"></div>
              </div>
            </div>
            <ul id="apx_props"><% apx_props.props.forEach(({ item })=> {
                
                  let flag = false
                  let categories = item.categories
                  let products = item.products

                  if(categories && _.state.categories){
                    categories.forEach(({ category }) => {
                      if(_.state.categories.find(el => el.slug == category.title.trim().toLowerCase() )){
                        flag = true
                        
                      }
                    })
                  }

                  if(products){
                    products.forEach(({ product }) => {
                      if(_.state.sku.trim().toLowerCase() == product.title.trim().toLowerCase()){
                        flag = true
                      }
                    })
                  }

                  if(flag){
                %>
                    <li>
                    <% if (item.image) {
                      let { width, height } = _.tryImageSize(item.image)
                      %>
                      <img 
                        src="<%=  item.image %>" 
                        alt="<%=  item.title %>"
                        <% if (width) { %>
                          width="<%= width %>"
                          height="<%= height %>"
                        <% } else { %>
                          width="31"
                          height="35"
                        <% } %>
                      />
                    <% } %>
                    <%- item.title %>      
                    </li>
                <% 
                  }
              }) 
            %></ul>
            <ul id="apx_seals" class=" d-md-flex d-none"><% apx_seals.seals.forEach(({ item })=> {
                
                  let flag = false
                  let categories = item.categories
                  let products = item.products

                  if(categories && _.state.categories){
                    categories.forEach(({ category }) => {
                      if(_.state.categories.find(el => el.slug == category.title.trim().toLowerCase() )){
                        flag = true
                        
                      }
                    })
                  }

                  if(products){
                    products.forEach(({ product }) => {
                      if(_.state.sku.trim().toLowerCase() == product.title.trim().toLowerCase()){
                        flag = true
                      }
                    })
                  }

                  if(flag){
                    let css = ""
                    css = css + "color:" + item.text_color + ';'
                    css = css + "background-color:" + item.bg_color + ';'
                    css = css + "border: 1px solid " + item.border_color + ';'
                %>
                    <li style="<%= css %>">
                    <% if (item.image) {%>
                      <img src="<%=  item.image %>" alt="<%=  item.title %>"/>
                    <% } %>
                    <%- item.title %>      
                    </li>
                <% 
                  }
              }) 
            %></ul>

            <!-- <p class="product__sku">
              COD: <%= _.state.sku %>
            </p> -->

            <div id="product-actions">
              <div id="product-loading">
                <% if (_.state.available && _.state.visible && _.ecomUtils.inStock(_.state)) { %>
                  <div class="product__price prices prices--big">
                    <strong class="prices__value">
                      <%= _.ecomUtils.formatMoney(_.ecomUtils.price(_.state)) %>
                    </strong>
                  </div>
                <% } %>

                <% if (_.state.variations && _.state.variations.length) { %>
                  <div data-slot="variations-info">
                    <!-- Custom info for products with variations, such as sizes table link -->
                    <% if (opt.size_guide && opt.size_guide.image) { %>
                      <% const sizeGuideTitle = opt.size_guide.title || _.dictionary('sizeGuide') %>
                      <div class="mb-3">
                        <a 
                          href="javascript:;"
                          data-toggle="modal"
                          data-target="#modal-size-guide"
                        >
                          <i class="i-ruler mr-1"></i> <%= sizeGuideTitle %>
                        </a>
                      </div>
                      <div 
                        class="modal modal-center fade" 
                        id="modal-size-guide" 
                        tabindex="-1" 
                        style="display: none;" 
                        aria-hidden="true"
                      >
                        <div class="modal-dialog">
                          <div class="modal-content">
                            <div class="modal-header d-flex align-items-center justify-content-between">
                              <h5 class="modal-title">
                                <%= sizeGuideTitle %>
                              </h5>
                              <button type="button" class="close" data-dismiss="modal">
                                <span aria-hidden="true">&times;</span>
                              </button>
                            </div>
                            <div class="modal-body">
                              <img 
                                class="img-fluid" 
                                src="<%= opt.size_guide.image %>" 
                                alt="<%= sizeGuideTitle %>"
                              >
                            </div>
                          </div>
                        </div>
                      </div>
                    <% } %>
                  </div>
                <% } %>

                <div class="spinner-border m-4" role="status">
                  <span class="sr-only">Loading...</span>
                </div>

                <div class="product__buy">
                  <% if (!_.state.slug.startsWith('bazipass')) { %>
                    <div class="apx_quantity_selector">
                      <button type="button"><i class="fas fa-chevron-down"></i></button>
                      <input type="tel" name="form-control apx_quantity-selector__input"/>
                      <button type="button"><i class="fas fa-chevron-up"></i></button>
                    </div>
                  <% } %>
                  <span class="w-100">
                    <button
                      type="button"
                      class="btn w-100 btn-lg btn-primary"
                      onclick="ecomCart.addProduct(storefront.context.body)"
                      <% if (_.state.variations && _.state.variations.length) { %>
                        disabled
                      <% } %>
                    >
                      <div data-slot="buy-button-content">
                        <% if (_.state.kit_composition && _.state.kit_composition.length) { %>
                          Adicionar Kit ao Carrinho
                        <% } else if (_.state.slug.startsWith('bazipass')) { %>
                          Comprar BaziPass
                        <% } else { %> 
                          <!-- <% let buyText %>
                          <% if (Array.isArray(_.widgets)) { %>
                            <% const productWidget = _.widgets.find(item => item.pkg === '@ecomplus/widget-product') %>
                            <% buyText = productWidget && productWidget.options.buyText %>
                          <% } %>
                          <%= buyText || _.dictionary('buy') %>
                          <%= buyText || _.dictionary('buy') %> -->
                          Adicionar ao Carrinho
                        <% } %>
                      </div>
                    </button>
                  </span>
                </div>                
              </div>
            </div>
            
          
          </div>
        </div>
      </div>

      <%- await include('@/helpers/widgets-append', {
        _, opt: {}, field: 'productSlots'
      }) %>
    </section>

    <%- await include('@/helpers/widgets-append', {
      _, opt: {}, field: 'productBlockAppend'
    }) %>
  </div>
</div>

<%
const productJsonLd = {
  '@context': 'http://schema.org',
  '@type': 'Product',
  sku: _.state.sku,
  description: _.state.short_description || _.state.meta_description || _.ecomUtils.name(_.state),
  name: _.ecomUtils.name(_.state),
  offers: {
    '@type': 'Offer',
    url: `https://${_.settings.domain}/${_.state.slug}`,
    availability: `${(_.ecomUtils.inStock(_.state) ? 'In' : 'OutOf')}Stock`,
    priceCurrency: _.settings.currency,
    price: _.ecomUtils.price(_.state),
    itemCondition: `http://schema.org/${(_.state.condition === 'new' ? 'New' : 'Used')}Condition`,
    priceValidUntil: _.ecomUtils.onPromotion(_.state) && _.state.price_effective_date && _.state.price_effective_date.end
      ? _.state.price_effective_date.end.slice(0, 10)
      : undefined,
    seller: {
      '@type': 'Organization',
      name: _.settings.name || _.store.name
    }
  }
}
if (_.state.brands && _.state.brands[0]) {
  productJsonLd.brand = {
    '@type': 'Brand',
    name: _.state.brands[0].name
  }
}
if (_.state.pictures && _.state.pictures.length) {
  productJsonLd.image = _.ecomUtils.img(_.state, null, 'zoom').url
    .replace(/(\w+\.)?(ecoms\d)\.com/i, '$2-nyc3.nyc3.cdn.digitaloceanspaces.com')
}
if (_.state.mpn && _.state.mpn[0]) {
  productJsonLd.mpn = _.state.mpn[0]
}
if (_.state.gtin && _.state.gtin[0]) {
  productJsonLd.gtin = _.state.gtin[0]
}
%>
<script type="application/ld+json"><%-
  JSON.stringify(productJsonLd)
%></script>
